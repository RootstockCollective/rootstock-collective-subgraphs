specVersion: 1.3.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum # BackersManagerRootstockCollectiveV1
    name: BackersManagerRootstockCollectiveV1
    network: {{network}}
    source:
      address: "{{backersManager.address}}"
      abi: BackersManagerRootstockCollectiveV1
      startBlock: {{backersManager.startBlock}}
      endBlock: {{backersManager.upgradeV2}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/backersManager/v1/index.ts
      entities:
        - Builder
        - BuilderState
        - GaugeToBuilder
        - ContractConfig
        - BlockChangeLog
      abis:
        - name: BackersManagerRootstockCollectiveV1
          file: ./abis/deprecated/BackersManagerRootstockCollective.json
      eventHandlers:
        - event: BuilderActivated(indexed address,address,uint64)
          handler: handleBuilderActivated
        - event: BuilderRewardReceiverReplacementApproved(indexed address,address)
          handler: handleBuilderRewardReceiverReplacementApproved
        - event: CommunityApproved(indexed address)
          handler: handleCommunityApproved
        - event: Dewhitelisted(indexed address)
          handler: handleDewhitelisted
        - event: GaugeCreated(indexed address,indexed address,address)
          handler: handleGaugeCreated
        - event: KYCApproved(indexed address)
          handler: handleKYCApproved
        - event: KYCRevoked(indexed address)
          handler: handleKYCRevoked
        - event: Paused(indexed address,bytes20)
          handler: handlePaused
        - event: Unpaused(indexed address)
          handler: handleUnpaused
        - event: Revoked(indexed address)
          handler: handleRevoked
        - event: Permitted(indexed address,uint256,uint256)
          handler: handlePermitted
        - event: BackerRewardPercentageUpdateScheduled(indexed address,uint256,uint256)
          handler: handleBackerRewardPercentageUpdateScheduled
  - kind: ethereum # BackersManagerRootstockCollectiveV2
    name: BackersManagerRootstockCollectiveV2
    network: {{network}}
    source:
      address: "{{backersManager.address}}"
      abi: BackersManagerRootstockCollective
      startBlock: {{backersManager.startBlock}}
      endBlock: {{backersManager.upgradeV3}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/backersManager/v2/index.ts
      entities:
        - BackerStakingHistory
        - GaugeStakingHistory
        - Backer
        - BackerToBuilder
        - Cycle
        - ContractConfig
        - BlockChangeLog
      abis:
        - name: BackersManagerRootstockCollective
          file: ./abis/BackersManagerRootstockCollective.json
        - name: RewardDistributorRootstockCollective
          file: ./abis/RewardDistributorRootstockCollective.json
        - name: GaugeRootstockCollective
          file: ./abis/GaugeRootstockCollective.json
      eventHandlers:
        - event: RewardDistributionFinished(indexed address)
          handler: handleRewardDistributionFinished
        - event: NotifyReward(indexed address,indexed address,uint256)
          handler: handleNotifyReward
  - kind: ethereum # BackersManagerRootstockCollectiveV3
    name: BackersManagerRootstockCollective
    network: {{network}}
    source:
      address: "{{backersManager.address}}"
      abi: BackersManagerRootstockCollective
      startBlock: {{backersManager.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/backersManager/index.ts
      entities:
        - BackerStakingHistory
        - GaugeStakingHistory
        - Backer
        - BackerToBuilder
        - Cycle
        - ContractConfig
        - BlockChangeLog
      abis:
        - name: BackersManagerRootstockCollective
          file: ./abis/BackersManagerRootstockCollective.json
        - name: RewardDistributorRootstockCollective
          file: ./abis/RewardDistributorRootstockCollective.json
        - name: GaugeRootstockCollective
          file: ./abis/GaugeRootstockCollective.json
      eventHandlers:
        - event: BackerRewardsOptedIn(indexed address)
          handler: handleBackerRewardsOptedIn
        - event: BackerRewardsOptedOut(indexed address)
          handler: handleBackerRewardsOptedOut
        - event: NewAllocation(indexed address,indexed address,uint256)
          handler: handleNewAllocation
        - event: RewardDistributionStarted(indexed address)
          handler: handleRewardDistributionStarted
        - event: RewardDistributionFinished(indexed address)
          handler: handleRewardDistributionFinished
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: RewardDistributionRewards(uint256,uint256,uint256)
          handler: handleRewardDistributionRewards
  - kind: ethereum # BuilderRegistryRootstockCollectiveV2
    name: BuilderRegistryRootstockCollectiveV2
    network: {{network}}
    source:
      address: "{{builderRegistry.address}}"
      abi: BuilderRegistryRootstockCollectiveV2
      startBlock: {{builderRegistry.startBlock}}
      endBlock: {{builderRegistry.upgradeV3}} 
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/builderRegistry/v2/index.ts
      entities:
        - Builder
        - BuilderState
        - GaugeToBuilder
        - ContractConfig
        - BlockChangeLog
      abis:
        - name: BuilderRegistryRootstockCollectiveV2
          file: ./abis/deprecated/BuilderRegistryRootstockCollective.json
      eventHandlers:
        - event: BuilderActivated(indexed address,address,uint64)
          handler: handleBuilderActivated
        - event: BuilderRewardReceiverReplacementApproved(indexed address,address)
          handler: handleBuilderRewardReceiverReplacementApproved
        - event: CommunityApproved(indexed address)
          handler: handleCommunityApproved
        - event: Dewhitelisted(indexed address)
          handler: handleDewhitelisted
        - event: GaugeCreated(indexed address,indexed address,address)
          handler: handleGaugeCreated
        - event: KYCApproved(indexed address)
          handler: handleKYCApproved
        - event: KYCRevoked(indexed address)
          handler: handleKYCRevoked
        - event: Paused(indexed address,bytes20)
          handler: handlePaused
        - event: Unpaused(indexed address)
          handler: handleUnpaused
        - event: Revoked(indexed address)
          handler: handleRevoked
        - event: Permitted(indexed address,uint256,uint256)
          handler: handlePermitted
        - event: BackerRewardPercentageUpdateScheduled(indexed address,uint256,uint256)
          handler: handleBackerRewardPercentageUpdateScheduled
  - kind: ethereum # BuilderRegistryRootstockCollectiveV3
    name: BuilderRegistryRootstockCollective
    network: {{network}}
    source:
      address: "{{builderRegistry.address}}"
      abi: BuilderRegistryRootstockCollective
      startBlock: {{builderRegistry.upgradeV3}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/builderRegistry/index.ts
      entities:
        - Builder
        - BuilderState
        - GaugeToBuilder
        - ContractConfig
        - BlockChangeLog
      abis:
        - name: BuilderRegistryRootstockCollective
          file: ./abis/BuilderRegistryRootstockCollective.json
      eventHandlers:
        - event: BuilderInitialized(indexed address,address,uint64)
          handler: handleBuilderInitialized
        - event: RewardReceiverUpdated(indexed address,address)
          handler: handleRewardReceiverUpdated
        - event: CommunityApproved(indexed address)
          handler: handleCommunityApproved
        - event: CommunityBanned(indexed address)
          handler: handleCommunityBanned
        - event: GaugeCreated(indexed address,indexed address,address)
          handler: handleGaugeCreated
        - event: KYCApproved(indexed address)
          handler: handleKYCApproved
        - event: KYCRevoked(indexed address)
          handler: handleKYCRevoked
        - event: KYCPaused(indexed address,bytes20)
          handler: handleKYCPaused
        - event: KYCResumed(indexed address)
          handler: handleKYCResumed
        - event: SelfPaused(indexed address)
          handler: handleSelfPaused
        - event: SelfResumed(indexed address,uint256,uint256)
          handler: handleSelfResumed
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: BackerRewardPercentageUpdateScheduled(indexed address,uint256,uint256)
          handler: handleBackerRewardPercentageUpdateScheduled
  - kind: ethereum # RewardDistributorRootstockCollective
    name: RewardDistributorRootstockCollective
    network: {{network}}
    source:
      address: "{{rewardDistributor.address}}"
      abi: RewardDistributorRootstockCollective
      startBlock: {{rewardDistributor.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/rewardDistributor/index.ts
      entities:
        - ContractConfig
        - BlockChangeLog
      abis:
        - name: RewardDistributorRootstockCollective
          file: ./abis/RewardDistributorRootstockCollective.json
      eventHandlers:
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: DefaultRewardAmountsUpdated(uint256,uint256,uint256)
          handler: handleDefaultRewardAmountsUpdated
templates:
  - kind: ethereum
    name: GaugeRootstockCollective
    network: {{network}}
    source:
      abi: GaugeRootstockCollective
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      file: ./src/gauge/index.ts
      entities:
        - Backer
        - BackersRewardsClaimed
        - Builder
        - BuilderRewardsClaimed
        - BackerToBuilder
        - BackerToBuilderRewardsClaimed
        - GaugeToBuilder
        - ContractConfig
        - BlockChangeLog
      abis:
        - name: GaugeRootstockCollective
          file: ./abis/GaugeRootstockCollective.json
      eventHandlers:
        - event: BackerRewardsClaimed(indexed address,indexed address,uint256)
          handler: handleBackerRewardsClaimed
        - event: BuilderRewardsClaimed(indexed address,indexed address,uint256)
          handler: handleBuilderRewardsClaimed
        - event: RewardSharesUpdated(uint256)
          handler: handleRewardSharesUpdated
